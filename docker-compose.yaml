version: '3.8'

services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
    restart: unless-stopped

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - /users/ankkit/dockervolumes/redis/data:/data
    restart: unless-stopped

  transmission:
    image: linuxserver/transmission
    container_name: transmission
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Berlin
    volumes:
      - /users/ankkit/dockervolumes/transmission/downloads:/downloads
      - /users/ankkit/dockervolumes/transmission/config:/config
    ports:
      - "9091:9091"
    restart: unless-stopped

  jackett:
    image: linuxserver/jackett
    container_name: jackett
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Berlin
    volumes:
      - /users/ankkit/dockervolumes/jackett/config:/config
    ports:
      - "9117:9117"
    restart: unless-stopped

  radarr:
    image: linuxserver/radarr
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Berlin
    volumes:
      - /users/ankkit/dockervolumes/radarr/movies:/movies
      - /users/ankkit/dockervolumes/radarr/downloads:/downloads
      - /users/ankkit/dockervolumes/radarr/config:/config
    ports:
      - "7878:7878"
    restart: unless-stopped

  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Berlin
    volumes:
      - /users/ankkit/dockervolumes/jellyfin/config:/config
      - /users/ankkit/dockervolumes/jellyfin/media/movies:/data/movies
      - /users/ankkit/dockervolumes/jellyfin/media/tvshows:/data/tvshows
      - /users/ankkit/dockervolumes/jellyfin/media/music:/data/music
      - /users/ankkit/dockervolumes/jellyfin/media/photos:/data/photos
    ports:
      - "8096:8096"
    restart: unless-stopped

  photoprism:
    image: photoprism/photoprism:latest
    container_name: photoprism
    restart: unless-stopped
    ports:
      - "2342:2342"
    environment:
      - PHOTOPRISM_HTTP_PORT=2342
      - PHOTOPRISM_PUBLIC="true"
      - PHOTOPRISM_READONLY="false"
      - PHOTOPRISM_ORIGINALS_LIMIT=1000
      - PHOTOPRISM_ADMIN_PASSWORD="admin"
    volumes:
      - "/users/ankkit/dockervolumes/photoprism/originals:/photoprism/originals"
      - "/users/ankkit/dockervolumes/photoprism/storage:/photoprism/storage"
      - "/users/ankkit/dockervolumes/photoprism/import:/photoprism/import"
      - "/users/ankkit/dockervolumes/photoprism/database:/photoprism/database"

  nextcloud:
    image: nextcloud
    restart: always
    ports:
      - "8080:80"
    volumes:
      - /users/ankkit/dockervolumes/nextcloud/data:/var/www/html
    environment:
      - MYSQL_HOST=db
    depends_on:
      - db

  db:
    image: mariadb
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=somewordpress
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
      - MYSQL_PASSWORD=password
    volumes:
      - /users/ankkit/dockervolumes/db/mariadb:/var/lib/mysql

  prometheus:
    image: prom/prometheus
    volumes:
      - /users/ankkit/dockervolumes/prometheus/data:/etc/prometheus
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    restart: always

  grafana:
    image: grafana/grafana
    volumes:
      - /users/ankkit/dockervolumes/grafana/data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3000:3000"
    restart: always

  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 300
    restart: unless-stopped

  duplicati:
    image: linuxserver/duplicati
    volumes:
      - /users/ankkit/dockervolumes/duplicati/backups:/config
      - /users/ankkit/dockervolumes/duplicati/data:/data
    ports:
      - "8200:8200"
    restart: unless-stopped

  

networks:
  default:
    driver: bridge

