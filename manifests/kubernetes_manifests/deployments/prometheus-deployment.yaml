apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.33.0 (HEAD)
  labels:
    io.kompose.service: prometheus
  name: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: prometheus
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.33.0 (HEAD)
      labels:
        io.kompose.network/labapp-default: 'true'
        io.kompose.service: prometheus
    spec:
      containers:
        - args:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--storage.tsdb.path=/prometheus'
            - '--log.level=debug'
          image: prom/prometheus
          name: prometheus
          ports:
            - containerPort: 9090
              hostPort: 9090
              protocol: TCP
          volumeMounts:
            - mountPath: /etc/prometheus
              name: prometheus-config # Corrected volume name
            - mountPath: /prometheus # Ensure to add this volume mount if needed
              name: prometheus-claim0
          securityContext:
            runAsUser: 1000 # Replace <user-id> with the appropriate user ID
            runAsGroup: 1000 # Replace <group-id> with the appropriate group ID 
            fsGroup: 1000 # Replace <group-id> with the appropriate group ID   
          resources:
            requests:
              memory: 64Mi
              cpu: 250m
            limits:
              memory: 128Mi
              cpu: 500m
      restartPolicy: Always
      volumes:
        - name: prometheus-config
          configMap:
            name: prometheus-config # Corrected ConfigMap name
        - name: prometheus-claim0
          persistentVolumeClaim:
            claimName: prometheus-claim0